THREE.CopyShader={uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float opacity;","uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","vec4 texel = texture2D( tDiffuse, vUv );","gl_FragColor = opacity * texel;","}"].join("\n")},THREE.EffectComposer=function(e,s){if(this.renderer=e,void 0===s){var r={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat,stencilBuffer:!1},t=e.getDrawingBufferSize();(s=new THREE.WebGLRenderTarget(t.width,t.height,r)).texture.name="EffectComposer.rt1"}this.renderTarget1=s,this.renderTarget2=s.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.passes=[],void 0===THREE.CopyShader&&console.error("THREE.EffectComposer relies on THREE.CopyShader"),void 0===THREE.ShaderPass&&console.error("THREE.EffectComposer relies on THREE.ShaderPass"),this.copyPass=new THREE.ShaderPass(THREE.CopyShader)},Object.assign(THREE.EffectComposer.prototype,{swapBuffers:function(){var e=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=e},addPass:function(e){this.passes.push(e);var s=this.renderer.getDrawingBufferSize();e.setSize(s.width,s.height)},insertPass:function(e,s){this.passes.splice(s,0,e)},render:function(e){var s,r,t=!1,i=this.passes.length;for(r=0;r<i;r++)if(!1!==(s=this.passes[r]).enabled){if(s.render(this.renderer,this.writeBuffer,this.readBuffer,e,t),s.needsSwap){if(t){var a=this.renderer.context;a.stencilFunc(a.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,e),a.stencilFunc(a.EQUAL,1,4294967295)}this.swapBuffers()}void 0!==THREE.MaskPass&&(s instanceof THREE.MaskPass?t=!0:s instanceof THREE.ClearMaskPass&&(t=!1))}},reset:function(e){if(void 0===e){var s=this.renderer.getDrawingBufferSize();(e=this.renderTarget1.clone()).setSize(s.width,s.height)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=e,this.renderTarget2=e.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2},setSize:function(e,s){this.renderTarget1.setSize(e,s),this.renderTarget2.setSize(e,s);for(var r=0;r<this.passes.length;r++)this.passes[r].setSize(e,s)}}),THREE.Pass=function(){this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1},Object.assign(THREE.Pass.prototype,{setSize:function(e,s){},render:function(e,s,r,t,i){console.error("THREE.Pass: .render() must be implemented in derived pass.")}}),THREE.KaleidoShader={uniforms:{tDiffuse:{value:null},sides:{value:6},angle:{value:0}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","uniform float sides;","uniform float angle;","varying vec2 vUv;","void main() {","vec2 p = vUv - 0.5;","float r = length(p);","float a = atan(p.y, p.x) + angle;","float tau = 2. * 3.1416 ;","a = mod(a, tau/sides);","a = abs(a - tau/sides/2.) ;","p = r * vec2(cos(a), sin(a));","vec4 color = texture2D(tDiffuse, p + 0.5);","gl_FragColor = color;","}"].join("\n")},THREE.MaskPass=function(e,s){THREE.Pass.call(this),this.scene=e,this.camera=s,this.clear=!0,this.needsSwap=!1,this.inverse=!1},THREE.MaskPass.prototype=Object.assign(Object.create(THREE.Pass.prototype),{constructor:THREE.MaskPass,render:function(e,s,r,t,i){var a,n,o=e.context,h=e.state;h.buffers.color.setMask(!1),h.buffers.depth.setMask(!1),h.buffers.color.setLocked(!0),h.buffers.depth.setLocked(!0),this.inverse?(a=0,n=1):(a=1,n=0),h.buffers.stencil.setTest(!0),h.buffers.stencil.setOp(o.REPLACE,o.REPLACE,o.REPLACE),h.buffers.stencil.setFunc(o.ALWAYS,a,4294967295),h.buffers.stencil.setClear(n),e.render(this.scene,this.camera,r,this.clear),e.render(this.scene,this.camera,s,this.clear),h.buffers.color.setLocked(!1),h.buffers.depth.setLocked(!1),h.buffers.stencil.setFunc(o.EQUAL,1,4294967295),h.buffers.stencil.setOp(o.KEEP,o.KEEP,o.KEEP)}}),THREE.ClearMaskPass=function(){THREE.Pass.call(this),this.needsSwap=!1},THREE.ClearMaskPass.prototype=Object.create(THREE.Pass.prototype),Object.assign(THREE.ClearMaskPass.prototype,{render:function(e,s,r,t,i){e.state.buffers.stencil.setTest(!1)}}),THREE.RenderPass=function(e,s,r,t,i){THREE.Pass.call(this),this.scene=e,this.camera=s,this.overrideMaterial=r,this.clearColor=t,this.clearAlpha=void 0!==i?i:0,this.clear=!0,this.clearDepth=!1,this.needsSwap=!1},THREE.RenderPass.prototype=Object.assign(Object.create(THREE.Pass.prototype),{constructor:THREE.RenderPass,render:function(e,s,r,t,i){var a,n,o=e.autoClear;e.autoClear=!1,this.scene.overrideMaterial=this.overrideMaterial,this.clearColor&&(a=e.getClearColor().getHex(),n=e.getClearAlpha(),e.setClearColor(this.clearColor,this.clearAlpha)),this.clearDepth&&e.clearDepth(),e.render(this.scene,this.camera,this.renderToScreen?null:r,this.clear),this.clearColor&&e.setClearColor(a,n),this.scene.overrideMaterial=null,e.autoClear=o}}),THREE.ShaderPass=function(e,s){THREE.Pass.call(this),this.textureID=void 0!==s?s:"tDiffuse",e instanceof THREE.ShaderMaterial?(this.uniforms=e.uniforms,this.material=e):e&&(this.uniforms=THREE.UniformsUtils.clone(e.uniforms),this.material=new THREE.ShaderMaterial({defines:e.defines||{},uniforms:this.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader})),this.camera=new THREE.OrthographicCamera(-1,1,1,-1,0,1),this.scene=new THREE.Scene,this.quad=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2),null),this.quad.frustumCulled=!1,this.scene.add(this.quad)},THREE.ShaderPass.prototype=Object.assign(Object.create(THREE.Pass.prototype),{constructor:THREE.ShaderPass,render:function(e,s,r,t,i){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=r.texture),this.quad.material=this.material,this.renderToScreen?e.render(this.scene,this.camera):e.render(this.scene,this.camera,s,this.clear)}});